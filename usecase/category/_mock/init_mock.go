// Code generated by MockGen. DO NOT EDIT.
// Source: ./init.go

// Package category is a generated GoMock package.
package category

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/richardtkpd/learn-go/entity"
)

// MockCategoryRepo is a mock of CategoryRepo interface.
type MockCategoryRepo struct {
	ctrl     *gomock.Controller
	recorder *MockCategoryRepoMockRecorder
}

// MockCategoryRepoMockRecorder is the mock recorder for MockCategoryRepo.
type MockCategoryRepoMockRecorder struct {
	mock *MockCategoryRepo
}

// NewMockCategoryRepo creates a new mock instance.
func NewMockCategoryRepo(ctrl *gomock.Controller) *MockCategoryRepo {
	mock := &MockCategoryRepo{ctrl: ctrl}
	mock.recorder = &MockCategoryRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCategoryRepo) EXPECT() *MockCategoryRepoMockRecorder {
	return m.recorder
}

// FindById mocks base method.
func (m *MockCategoryRepo) FindById(id string) *entity.Category {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindById", id)
	ret0, _ := ret[0].(*entity.Category)
	return ret0
}

// FindById indicates an expected call of FindById.
func (mr *MockCategoryRepoMockRecorder) FindById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindById", reflect.TypeOf((*MockCategoryRepo)(nil).FindById), id)
}
